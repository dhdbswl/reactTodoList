{"version":3,"sources":["logo.svg","components/Form.js","components/Todo.js","components/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","placeholder","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","round","random","name","Todo","todo","map","item","filter","el","Todolist","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2918962d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React  from \"react\";\r\n\r\nconst Form = ({inputText, setInputText, todos, setTodos, setStatus}) => {\r\n    // function\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {\r\n                text: inputText, completed: false, id: Math.round(Math.random()*1000)\r\n            }\r\n        ]);\r\n        setInputText(\"\");\r\n    };\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    };\r\n\r\n    // return\r\n    return (\r\n        <form>\r\n            <input \r\n                placeholder=\"Enter your To Do.\"\r\n                value={inputText}\r\n                onChange={inputTextHandler} \r\n                type=\"text\" \r\n                className=\"todo-input\" \r\n            />\r\n            <button \r\n                onClick={submitTodoHandler} \r\n                className=\"todo-button\" \r\n                type=\"submit\"\r\n            >\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Done</option>\r\n                    <option value=\"uncompleted\">Not Yet</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    };\r\n    const completeHandler = () => {\r\n        setTodos(\r\n            todos.map((item) => {\r\n                if(item.id === todo.id) {\r\n                    return {\r\n                        ...item, completed: !item.completed\r\n                    };\r\n                }\r\n                return item;\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n            <button \r\n                className=\"complete-btn\"\r\n                onClick={completeHandler}\r\n            >\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button\r\n                className=\"trash-btn\"\r\n                onClick={deleteHandler}\r\n            >\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from './Todo';\r\n\r\nconst Todolist = ({todos, setTodos, filteredTodos}) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map((todo) => (\r\n                    <Todo\r\n                        key={todo.id}\r\n                        text={todo.text}\r\n                        todo={todo}\r\n                        todos={todos}\r\n                        setTodos={setTodos}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todolist;","import React, { useState, useEffect } from \"react\";\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Form from './components/Form';\r\nimport Todolist from './components/Todolist';\r\n\r\nfunction App() {\r\n  const initState = [\r\n    {text: \"Hello World ðŸ¤©\", completed: false, id: 0},\r\n    {text: \"Click the plus button to add a list.\", completed: false, id: 1}\r\n  ];\r\n  // state stuff \r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [todos, setTodos] = useState(initState);\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n\r\n  // run once when the app start\r\n  useEffect(() => {\r\n    getLocalTodos();\r\n  }, []);\r\n  // use effect\r\n  useEffect(() => {\r\n    filterHandler();\r\n    saveLocalTodos();\r\n  }, [todos, status]);\r\n\r\n  // function\r\n  const filterHandler = () => {\r\n    switch(status) {\r\n      case \"completed\":\r\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\r\n        break;\r\n      case \"uncompleted\":\r\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\r\n        break;\r\n      default:\r\n        setFilteredTodos(todos);\r\n        break;\r\n    }\r\n  };\r\n  // save to local\r\n  const saveLocalTodos = () => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  };\r\n  const getLocalTodos = () => {\r\n    if(localStorage.getItem(\"todos\") === null) {\r\n      localStorage.setItem(\"todos\", JSON.stringify([]));\r\n    } else {\r\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\r\n      setTodos(todoLocal);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"list-wrap\">\r\n        <header>\r\n          <h1>To Do List</h1>\r\n        </header>\r\n        <Form\r\n          inputText={inputText}\r\n          setInputText={setInputText}\r\n          todos={todos}\r\n          setTodos={setTodos}\r\n          setStatus={setStatus}\r\n        />\r\n        <Todolist\r\n          todos={todos}\r\n          setTodos={setTodos}\r\n          filteredTodos={filteredTodos}\r\n        />  \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}